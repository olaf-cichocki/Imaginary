version: 2.1

jobs:
  # build:
  #   docker:
  #     - image: circleci/elixir:1.9
  #   environment:
  #     - MIX_ENV: test
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run: mix local.hex --force
  #     - run: mix local.rebar --force
  #     - run: mix deps.get
  #     - run: mix credo
  #     - run: mix compile --warnings-as-errors --force
  #     - run: mix test
  #     - store_test_results:
  #       path: /tmp/imaginary-test-results/
  #     - run: mix coveralls.json
  #     - codecov/upload:
  #       file: /cover/excoveralls.json
  #     - run: mix format --check-formatted --dry-run

  build:
    docker:
      - image: circleci/elixir:1.9
    environment:
      - MIX_ENV: test
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_cache:
        key: deps-cache-{{ checksum "mix.lock" }}
      - run: mix do deps.get, deps.compile
      - save_cache:
        key: deps-cache-{{ checksum "mix.lock" }}
        paths:
          - deps
          - ~/.mix
          - _build
      - run: mix compile
      - run: echo "$OTP_VERSION $ELIXIR_VERSION" > .version_file
      - restore_cache:
        keys:
          - plt-cache-{{ checksum ".version_file" }}-{{ checksum "mix.lock" }}
      - run: mix dialyzer --plt
      - save_cache:
        key: plt-cache-{{ checksum ".version_file"  }}-{{ checksum "mix.lock" }}
        paths:
          - _build
          - deps
          - ~/.mix

  test:
    docker:
      - image: circleci/elixir:19
    steps:
      - checkout
      - restore_cache:
        key: deps-cache-{{ checksum "mix.lock" }}
      - run: mix coveralls.json
      - store_artifacts:
        path: cover
        destination: coverage_results
      - run: curl -s https://codecov.io/bash | bash

generate_documentation:
  docker:
    - image: circleci/elixir:1.9
      environment:
        - MIX_ENV: test
  steps:
    - checkout
    - restore_cache:
      key: deps-cache-{{ checksum "mix.lock" }}
    - run: mix docs
    - store_artifacts:
      path: doc
      destination: documentation

  credo:
    docker:
      - image: circleci/elixir:1.9
    environment:
      - MIX_ENV: test
    steps:
      - checkout
      - run: mix credo

  # dialyzer:
  #   docker:
  #   - image: circleci/elixir:1.9
  #       environment:
  #       MIX_ENV: test
  #   steps:
  #   - checkout
  #   - run: echo "$OTP_VERSION $ELIXIR_VERSION" > .version_file
  #   - restore_cache:
  #       keys:
  #           - plt-cache-{{ checksum ".version_file" }}-{{ checksum "mix.lock" }}
  #   - run: mix dialyzer --halt-exit-status

format_check:
  docker:
    - image: circleci/elixir:1.9
  environment:
    - MIX_ENV: test
  steps:
    - checkout
    - run: mix format --check-formatted

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - format_check:
        requires:
          - build
      - generate_documentation:
        requires:
          - build
      # - dialyzer:
      #     requires:
      #         - build
      - credo:
        requires:
          - build
      - test:
        requires:
          - build
